---
- set_fact:
    label_selector_value: "galera_cluster={{ galera_cluster_name }},app={{ galera_app_name }}"

- block:
  - name: lookup k8s secrets
    set_fact:
      secrets_lookup: "{{ lookup('k8s', api_version='v1', kind='Secret', namespace=namespace, label_selector=label_selector_value) }}"
  rescue:
  - name: set secrets if they don't exist
    set_fact:
      secrets_lookup: []

- block:
  - name: lookup k8s configmap
    set_fact:
      configmap_lookup: "{{ lookup('k8s', api_version='v1', kind='ConfigMap', namespace=namespace, resource_name=galera_configmap_name) }}"
  rescue:
  - name: set configmap_lookup to default on failure to find GVK
    set_fact:
      configmap_lookup: []

- block:
  - name: lookup k8s service
    set_fact:
      services_lookup: "{{ lookup('k8s', api_version='v1', kind='Service', namespace=namespace, label_selector=label_selector_value) }}"
  rescue:
  - name: set services_lookup to default on failure to find GVK
    set_fact:
      services_lookup: []

- name: lookup k8s GaleraService
  set_fact:
    galera_service_lookup: "{{ lookup('k8s', api_version='galera.database.coreos.com/v1alpha1', kind='GaleraService', namespace=namespace, resource_name=galera_cluster_name) }}"

- debug: var=configmap_lookup
- debug: var=services_lookup
- debug: var=galera_service_lookup

#- name: Get currently deployed Vault image name
#  set_fact:
#    current_deployed_image: "{{ vault_deployment_lookup.spec.template.spec.containers['name'=='vault'].image }}"
#  when: vault_deployment_lookup.spec is defined

#- debug:
#    msg: "Vault Version has CHANGED to '{{ vault_version }}' - Currently at {{ current_deployed_image }}"
#  when: (current_deployed_image is defined) and (current_deployed_image != vault_image_name)

#- debug:
#    msg: "Vault Nodes has CHANGED - updating deployment.spec.replicas value"
#  when: (vault_deployment_lookup.spec is defined) and (vault_deployment_lookup.spec.replicas != vault_replica_size)
